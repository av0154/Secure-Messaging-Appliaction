{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Secure-Messaging-App\\\\frontend-sender\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js'; // Import CryptoJS\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sender, setSender] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('');\n  const handleSendMessage = async () => {\n    try {\n      // Encrypt the message\n      const encryptedMessage = CryptoJS.AES.encrypt(message, 'your-secret-key').toString();\n      const res = await axios.post('http://localhost:5000/api/messages/send', {\n        sender,\n        receiver,\n        message: encryptedMessage // Send the encrypted message\n      });\n      setStatus(res.data.message);\n      setMessage('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setStatus('Error sending message. Please check your network and server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secure Messaging - Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"sender\",\n      children: \"Sender:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"sender\",\n      value: sender,\n      onChange: e => setSender(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"receiver\",\n      children: \"Receiver:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"receiver\",\n      value: receiver,\n      onChange: e => setReceiver(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"message\",\n      children: \"Enter your message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xy1gsHXwSUnssPk0iG9NTG88Bwo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","CryptoJS","jsxDEV","_jsxDEV","App","_s","sender","setSender","receiver","setReceiver","message","setMessage","status","setStatus","handleSendMessage","encryptedMessage","AES","encrypt","toString","res","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Secure-Messaging-App/frontend-sender/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoJS from 'crypto-js'; // Import CryptoJS\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [sender, setSender] = useState('');\r\n  const [receiver, setReceiver] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      // Encrypt the message\r\n      const encryptedMessage = CryptoJS.AES.encrypt(message, 'your-secret-key').toString();\r\n      \r\n      const res = await axios.post('http://localhost:5000/api/messages/send', {\r\n        sender,\r\n        receiver,\r\n        message: encryptedMessage, // Send the encrypted message\r\n      });\r\n      setStatus(res.data.message);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setStatus('Error sending message. Please check your network and server.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Secure Messaging - Sender</h1>\r\n      <label htmlFor=\"sender\">Sender:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"sender\"\r\n        value={sender}\r\n        onChange={(e) => setSender(e.target.value)}\r\n      />\r\n      <label htmlFor=\"receiver\">Receiver:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"receiver\"\r\n        value={receiver}\r\n        onChange={(e) => setReceiver(e.target.value)}\r\n      />\r\n      <label htmlFor=\"message\">Enter your message:</label>\r\n      <textarea\r\n        id=\"message\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n      ></textarea>\r\n      <button onClick={handleSendMessage}>Send Message</button>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}