{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Secure-Messaging-App\\\\frontend-reciever\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [receiver, setReceiver] = useState(''); // Receiver state\n  const [error, setError] = useState(''); // Error state\n\n  // Function to fetch messages for the specified receiver\n  const fetchMessages = async () => {\n    if (!receiver) return; // Skip if no receiver specified\n    try {\n      const res = await axios.get(`http://localhost:5000/api/messages/receiver/${receiver}`);\n      setMessages(res.data.messages);\n      setError(''); // Clear any previous errors\n    } catch (err) {\n      console.error('Error fetching messages:', err);\n      setError('Error fetching messages. Please check the receiver name.');\n    }\n  };\n\n  // Fetch messages when the receiver input changes\n  useEffect(() => {\n    const interval = setInterval(fetchMessages, 5000); // Fetch new messages every 5 seconds\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, [receiver]);\n\n  // Function to handle Enter key press\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      fetchMessages(); // Fetch messages when Enter is pressed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secure Messaging - Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"receiver\",\n      children: \"Receiver:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"receiver\",\n      value: receiver,\n      onChange: e => setReceiver(e.target.value),\n      onKeyPress: handleKeyPress // Call handleKeyPress on key press\n      ,\n      placeholder: \"Enter receiver name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Received Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), \" \", msg.sender, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), \" \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No messages to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WuZe7YQddNAd7OCLx3vEGOkFp/U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","messages","setMessages","receiver","setReceiver","error","setError","fetchMessages","res","get","data","err","console","interval","setInterval","clearInterval","handleKeyPress","event","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onKeyPress","placeholder","length","map","msg","index","sender","message","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Secure-Messaging-App/frontend-reciever/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [receiver, setReceiver] = useState(''); // Receiver state\r\n  const [error, setError] = useState(''); // Error state\r\n\r\n  // Function to fetch messages for the specified receiver\r\n  const fetchMessages = async () => {\r\n    if (!receiver) return; // Skip if no receiver specified\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/messages/receiver/${receiver}`);\r\n      setMessages(res.data.messages);\r\n      setError(''); // Clear any previous errors\r\n    } catch (err) {\r\n      console.error('Error fetching messages:', err);\r\n      setError('Error fetching messages. Please check the receiver name.');\r\n    }\r\n  };\r\n\r\n  // Fetch messages when the receiver input changes\r\n  useEffect(() => {\r\n    const interval = setInterval(fetchMessages, 5000); // Fetch new messages every 5 seconds\r\n    return () => clearInterval(interval); // Cleanup on unmount\r\n  }, [receiver]);\r\n\r\n  // Function to handle Enter key press\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      fetchMessages(); // Fetch messages when Enter is pressed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Secure Messaging - Receiver</h1>\r\n\r\n      <label htmlFor=\"receiver\">Receiver:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"receiver\"\r\n        value={receiver}\r\n        onChange={(e) => setReceiver(e.target.value)}\r\n        onKeyPress={handleKeyPress} // Call handleKeyPress on key press\r\n        placeholder=\"Enter receiver name\"\r\n      />\r\n\r\n      {error && <p className=\"error\">{error}</p>} {/* Display error if any */}\r\n\r\n      <h2>Received Messages</h2>\r\n      {messages.length > 0 ? (\r\n        <ul>\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>\r\n              <strong>From:</strong> {msg.sender} <br />\r\n              <strong>Message:</strong> {msg.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No messages to display</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}