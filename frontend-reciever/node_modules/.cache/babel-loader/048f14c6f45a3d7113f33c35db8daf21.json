{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Secure-Messaging-App\\\\frontend-reciever\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js'; // Import CryptoJS for decryption\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [receiver, setReceiver] = useState(''); // Receiver state\n  const [decryptedMessages, setDecryptedMessages] = useState([]); // Decrypted messages state\n\n  // Function to fetch messages for the specified receiver\n  const fetchMessages = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/messages/receiver/${receiver}`);\n      setMessages(res.data.messages);\n      // Decrypt the messages\n      const decrypted = res.data.messages.map(msg => {\n        const bytes = CryptoJS.AES.decrypt(msg.message, 'your-secret-key');\n        const originalMessage = bytes.toString(CryptoJS.enc.Utf8);\n        return {\n          ...msg,\n          originalMessage\n        }; // Add original message to each message object\n      });\n      setDecryptedMessages(decrypted);\n    } catch (err) {\n      console.error('Error fetching messages:', err);\n    }\n  };\n\n  // Fetch messages when the receiver input changes\n  useEffect(() => {\n    if (receiver) {\n      fetchMessages();\n    }\n  }, [receiver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secure Messaging - Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"receiver\",\n      children: \"Receiver:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"receiver\",\n      value: receiver,\n      onChange: e => setReceiver(e.target.value),\n      placeholder: \"Enter receiver name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Received Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), decryptedMessages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: decryptedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), \" \", msg.sender, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), \" \", msg.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 65\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Decrypted Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), \" \", msg.originalMessage, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No messages to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wvUlLeUQcPGOQta1mhclmumrPUo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoJS","jsxDEV","_jsxDEV","App","_s","messages","setMessages","receiver","setReceiver","decryptedMessages","setDecryptedMessages","fetchMessages","res","get","data","decrypted","map","msg","bytes","AES","decrypt","message","originalMessage","toString","enc","Utf8","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","length","index","sender","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Secure-Messaging-App/frontend-reciever/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoJS from 'crypto-js'; // Import CryptoJS for decryption\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [receiver, setReceiver] = useState(''); // Receiver state\r\n  const [decryptedMessages, setDecryptedMessages] = useState([]); // Decrypted messages state\r\n\r\n  // Function to fetch messages for the specified receiver\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/api/messages/receiver/${receiver}`);\r\n      setMessages(res.data.messages);\r\n      // Decrypt the messages\r\n      const decrypted = res.data.messages.map(msg => {\r\n        const bytes = CryptoJS.AES.decrypt(msg.message, 'your-secret-key');\r\n        const originalMessage = bytes.toString(CryptoJS.enc.Utf8);\r\n        return { ...msg, originalMessage }; // Add original message to each message object\r\n      });\r\n      setDecryptedMessages(decrypted);\r\n    } catch (err) {\r\n      console.error('Error fetching messages:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch messages when the receiver input changes\r\n  useEffect(() => {\r\n    if (receiver) {\r\n      fetchMessages();\r\n    }\r\n  }, [receiver]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Secure Messaging - Receiver</h1>\r\n\r\n      <label htmlFor=\"receiver\">Receiver:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"receiver\"\r\n        value={receiver}\r\n        onChange={(e) => setReceiver(e.target.value)}\r\n        placeholder=\"Enter receiver name\"\r\n      />\r\n\r\n      <h2>Received Messages</h2>\r\n      {decryptedMessages.length > 0 ? (\r\n        <ul>\r\n          {decryptedMessages.map((msg, index) => (\r\n            <li key={index}>\r\n              <strong>From:</strong> {msg.sender} <br />\r\n              <strong>Encrypted Message:</strong> {msg.message} <br /> {/* Display Encrypted Message */}\r\n              <strong>Decrypted Message:</strong> {msg.originalMessage} {/* Display Decrypted Message */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No messages to display</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}